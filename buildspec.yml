# version: 0.2
# phases:
#   install:
#     runtime-versions:
#       java: corretto8
#   build:
#     commands:
#       - java -version
#       - pwd
#       - whoami
#       - ls -a
#       - ls -asl
#       - cd HelloWorldFunction
#       - mvn clean package
#       - chmod -R 777 ./
#       - cd ..
#       - ls -asl
#       - export BUCKET=codepipeline-ap-northeast-1-679695920619
#       - sam package --template-file template.yaml --s3-bucket $BUCKET --output-template-file packaged-template.yaml
# artifacts:
#   files:
#     - packaged-template.yaml
version: 0.2
env:
  shell: bash
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
       - echo Logging in to Amazon ECR...
       - whoami
       - pwd
       - ls -asl
       - docker ps
       - chmod 666 /var/run/docker.sock
       - mkdir target
       - chmod 777 target
       - chmod 777 *
  build:
    commands:
       - docker build --no-cache --tag spring-native-aws-lambda:0.0.1-SNAPSHOT --file Dockerfile .
       - docker rm spring-native-aws-lambda
       - docker run --name spring-native-aws-lambda spring-native-aws-lambda:0.0.1-SNAPSHOT
       - docker cp spring-native-aws-lambda:app/target/spring-native-aws-lambda-0.0.1-SNAPSHOT-native-zip.zip ./target/
       - ls -asl target/
       - pwd
       - aws cloudformation package --template-file cfn/template.yaml --output-template-file packaged.yaml --s3-bucket codepipeline-us-east-2-467398234360
artifacts:
  files:
    - target/spring-native-aws-lambda-0.0.1-SNAPSHOT-native-zip.zip
    - packaged.yaml
  discard-paths: yes